{
	"name": "Cosmos",
	"properties": {
		"folder": {
			"name": "Demo7_Cosmos_Link_BI"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkdemo7",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "238ba946-467b-484e-9a67-75c1adddc0cc"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ac0fda21-dbed-4e24-9126-e7f33fb2458a/resourceGroups/Synapse_in_A_Day_Compass/providers/Microsoft.Synapse/workspaces/synapsecompass/bigDataPools/sparkdemo7",
				"name": "sparkdemo7",
				"type": "Spark",
				"endpoint": "https://synapsecompass.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkdemo7",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"dfStoreDemoGraphics = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/StoreDemoGraphics.csv\", header=True, inferSchema='true')\r\n",
					"              )\r\n",
					"\r\n",
					"dfRetailSales = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/RetailSales.csv\", header=True, inferSchema='true')\r\n",
					"              )\r\n",
					"\r\n",
					"dfProduct = (spark\r\n",
					"                .read\r\n",
					"                .csv(\"/RetailData/Products.csv\", header=True, inferSchema='true')\r\n",
					"              )"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"dfStoreDemoGraphics.write.format(\"cosmos.oltp\")\\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"    .option(\"spark.cosmos.container\", \"StoreDemographics\")\\\r\n",
					"    .option(\"spark.cosmos.write.upsertEnabled\", \"true\")\\\r\n",
					"    .mode('append')\\\r\n",
					"    .save()\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"dfProduct.write.format(\"cosmos.oltp\")\\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"    .option(\"spark.cosmos.container\", \"Products\")\\\r\n",
					"    .option(\"spark.cosmos.write.upsertEnabled\", \"true\")\\\r\n",
					"    .mode('append')\\\r\n",
					"    .save()\r\n",
					"\r\n",
					"\r\n",
					"dfRetailSales.write.format(\"cosmos.oltp\")\\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"RetailSalesDemoDB\")\\\r\n",
					"    .option(\"spark.cosmos.container\", \"RetailSales\")\\\r\n",
					"    .option(\"spark.cosmos.write.upsertEnabled\", \"true\")\\\r\n",
					"    .mode('append')\\\r\n",
					"    .save()\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 2
			}
		]
	}
}